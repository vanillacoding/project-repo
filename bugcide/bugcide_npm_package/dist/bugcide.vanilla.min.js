function Bugcide(){this.errorTimer=null,this.errorQueue=[],this.projectToken=null,this.encouragingImage=["https://media.giphy.com/media/l41Yh1olOKd1Tgbw4/giphy.gif","https://media.giphy.com/media/xT5LMJ1RDaVyttu3vO/giphy.gif","https://media.giphy.com/media/26gskaXMHwQFmuXAc/giphy.gif","https://media.giphy.com/media/3owyoYqpufITS7pPeE/giphy.gif","https://media.giphy.com/media/26xBPr0aH7KoVx5L2/giphy.gif","https://media.giphy.com/media/xT1XGT9ersCCKjhVny/giphy.gif","https://media.giphy.com/media/xT1XH0lC7yoLLB1BSM/giphy.gif"],this.encouragingMessages=["힘내세요","실패는 성공의 어머니다","난 할 수 있어!","이 정도 버그는 아무것도 아니지","산책이라도 하고 와...","포기하지마세요","이것만 해결하면...!"]}Bugcide.prototype.countError=function(){let e=0;return{increase:function(){e++},getNumber:function(){return e}}}(),Bugcide.prototype.sendErrorApi=function(e,t){return fetch(`https://api.bugcide.live/project/${e}/error`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then(e=>e.json())},Bugcide.prototype.init=function({projectToken:e}){window.addEventListener("error",t=>this.startTracking.call(this,t,e)),console.log("Bugcide is now tracking error!")},Bugcide.prototype.startTracking=function(e,t){this.projectToken=t;const{filename:r,lineno:i,colno:o,error:n}=e;if(void 0!==n.hasBeenCaught)return!1;n.hasBeenCaught=!0,this.countError.increase();const s={name:n.name,message:n.message,stack:n.stack,filename:r,lineno:i,colno:o,created_at:new Date};if(this.errorQueue.unshift(s),this.errorTimer=setTimeout(()=>{if(clearTimeout(this.errorTimer),0===this.errorQueue.length)return;let e=[];if(this.errorQueue.length>1){let t=1;e=this.errorQueue.reduce((e,r)=>{const i=e.length-1;return e[i]&&e[i].stack===r.stack?(t++,r.duplicate_count=t,e[i]=r):(t=1,r.duplicate_count=t,e.push(r)),e},[])}else e=this.errorQueue.slice();const t={errorInfo:e};this.sendErrorApi(this.projectToken,t).then(e=>{if("unauthorized"===e.result)throw new Error("Project Token is invalid!");if("ok"!==e.result&&"not changed"!==e.result)throw new Error("Something went wrong.");console.log("Bugcide: error recorded")}).catch(e=>{console.log("Bugcide Error: "+e.message)}),this.errorQueue.length=0},2e3),this.countError.getNumber()%5==0){const e=this.getRandom(this.encouragingMessages),t=this.getRandom(this.encouragingImage);console.log(`%c${e}`,`font-size: 30px; line-height: 100px; padding-left: 160px; background:url(${t}) no-repeat left center / 150px;`)}},Bugcide.prototype.getRandom=function(e){return e[Math.floor(Math.random()*e.length)]};
